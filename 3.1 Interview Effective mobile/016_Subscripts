Сабскрипты (subscripts) в Swift позволяют обращаться к элементам коллекции, массива, словаря или любого другого объекта с помощью квадратных скобок, как если бы они были массивом.

Например, если у вас есть массив чисел, вы можете получить доступ к элементу массива с помощью индекса:
let numbers = [1, 2, 3]
let secondNumber = numbers[1] // 2

В этом примере мы получаем доступ к элементу массива по индексу 1, который соответствует второму элементу массива.

Сабскрипты позволяют определить эту же логику для собственных объектов. Вы можете определить собственный сабскрипт для любого объекта, чтобы обращаться к его элементам по индексу или ключу.

Например, вот как можно определить сабскрипт для класса, представляющего магазин:
class Store {
    var products = ["apple", "orange", "banana"]

    subscript(index: Int) -> String {
        get {
            return products[index]
        }
        set(newValue) {
            products[index] = newValue
        }
    }
}

Здесь мы определили сабскрипт для объекта Store, который позволяет обращаться к его элементам по индексу и изменять их значения. Вы можете получить доступ к элементу магазина с помощью индекса, как если бы он был массивом:
let store = Store()
let secondProduct = store[1] // "orange"
store[1] = "lemon"
В этом примере мы получаем доступ к второму продукту в магазине с помощью сабскрипта и затем изменяем его значение на "lemon".

Сабскрипты могут использоваться в качестве удобного способа доступа к элементам объекта, поэтому они широко используются в стандартных библиотеках Swift и в приложениях.
