Хэш-таблица - это структура данных, которая использует хэш-функцию для быстрого поиска и доступа к элементам по ключу. Она состоит из массива, в котором каждый элемент содержит пару "ключ-значение". Хэш-таблица использует хэш-функцию для вычисления индекса массива, где хранится элемент с соответствующим ключом.

Простым примером использования хэш-таблицы может быть создание словаря, где ключи - это слова, а значения - их определения:
var dictionary = [String: String]()
dictionary["apple"] = "a fruit with a red or green skin and a white inside"
dictionary["banana"] = "a long curved fruit that grows in clusters and has soft pulpy flesh and yellow skin when ripe"

Здесь мы создаем словарь с помощью хэш-таблицы, где ключи - это слова, а значения - их определения. Мы можем получить определение слова, обратившись к соответствующему ключу:
print(dictionary["apple"]) // "a fruit with a red or green skin and a white inside"

Хэш-таблицы используются для обеспечения быстрого доступа к элементам, так как они позволяют быстро вычислять индекс элемента по ключу с помощью хэш-функции. Они широко используются в программировании для реализации словарей, кэшей, множеств и других структур данных, где быстрый доступ к элементам по ключу является важным.

Хэш-функция - это функция, которая принимает на вход некоторый набор данных (например, строку) и превращает его в некоторое число фиксированной длины (хэш-код). Хэш-функции используются для быстрого доступа к данным в хэш-таблицах и для проверки идентичности данных.

func hash(_ str: String) -> Int {
    var sum = 0
    for char in str.utf8 {
        sum += Int(char)
    }
    return sum
}
Здесь мы проходим по всем символам в строке, вычисляем их коды ASCII, складываем их и возвращаем полученную сумму. Таким образом, каждой строке будет соответствовать свой уникальный хэш-код.

Для примера, рассмотрим две строки "hello" и "world". Если мы применим нашу хэш-функцию к этим строкам, то получим следующие хэш-коды:
let hashHello = hash("hello") // 532
let hashWorld = hash("world") // 552

Как видно из результатов, у двух разных строк имеются разные хэш-коды. Это свойство хэш-функций является важным, так как позволяет быстро проверять идентичность данных в различных структурах данных, таких как хэш-таблицы.
