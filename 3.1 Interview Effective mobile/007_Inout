#inout
inout - это ключевое слово в Swift, которое используется для передачи параметров функции по ссылке (по адресу), а не по значению. Это означает, что функция может изменять значение параметра напрямую в вызывающей ее области памяти.

В Swift параметры функции, как правило, передаются по значению, что означает, что функция получает копию значения параметра и работает с ней внутри функции. Это означает, что изменения, внесенные в параметр внутри функции, не влияют на его значение в вызывающей области памяти. Однако, если параметр функции передан с помощью inout, функция получает ссылку на значение параметра, которое можно изменять напрямую в вызывающей области памяти.

Например, мы можем написать функцию swapTwoInts, которая будет менять местами значения двух целочисленных параметров, используя ключевое слово inout:
func swapTwoInts(_ a: inout Int, _ b: inout Int) {
    let temporaryA = a
    a = b
    b = temporaryA
}

В этой функции параметры a и b передаются с помощью inout. Это означает, что функция получает ссылки на значения a и b, а не их копии, и может изменять их напрямую в вызывающей области памяти. Таким образом, если мы вызываем эту функцию вот так:

var x = 1
var y = 2
swapTwoInts(&x, &y)
print("x is now \(x), and y is now \(y)") // "x is now 2, and y is now 1"

Здесь мы передаем параметры x и y с помощью inout, используя оператор &, который указывает на ссылку на переменную. После выполнения функции значения переменных x и y меняются местами в вызывающей области памяти.

Обратите внимание, что параметры inout могут быть изменены только внутри функции, в которой они были объявлены.
