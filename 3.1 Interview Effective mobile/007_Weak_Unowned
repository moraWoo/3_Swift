#weak vs unowned
В Swift ключевые слова weak и unowned используются для определения связи между объектами, которые могут ссылаться друг на друга. Обе эти ключевые слова используются для разрешения проблемы циклических ссылок (circular references) между объектами, когда два объекта имеют сильную ссылку друг на друга, что может привести к утечке памяти.

Однако, есть разница между weak и unowned:

weak - определяет несильную ссылку между объектами. Когда объект, на который указывает weak ссылка, удаляется из памяти, weak ссылка автоматически обнуляется, чтобы предотвратить обращение к невалидному объекту. weak ссылки всегда должны быть объявлены как опциональные (optional), потому что объект, на который они указывают, может быть удален из памяти в любой момент.

unowned - также определяет несильную ссылку между объектами, но не автоматически обнуляет ссылку, когда объект удаляется из памяти. unowned ссылки должны быть объявлены как неопциональные (non-optional), потому что объект, на который они указывают, всегда должен существовать, когда используется unowned ссылка. Если объект, на который указывает unowned ссылка, был удален из памяти, обращение к этой ссылке приведет к аварийному завершению приложения (crash).

Например, если у нас есть два объекта Person и Apartment, и объект Person имеет ссылку на объект Apartment, мы можем использовать weak или unowned для определения этой связи.

class Person {
    var apartment: Apartment?
    ...
}

class Apartment {
    weak var tenant: Person?
    ...
}

Здесь мы используем weak ссылку для свойства tenant в классе Apartment, потому что объект Person может быть удален из памяти в любое время. Если бы мы использовали unowned ссылку, то в случае удаления объекта Person из памяти, обращение к unowned ссылке tenant привело бы к аварийному завершению приложения.
